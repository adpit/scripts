#!/usr/bin/perl

use warnings;
use strict;
use Log::Any::App qw($log);

use Builtin::Logged qw(system);
use Cwd;
use File::Which;
use Getopt::Long;
use String::ShellQuote;

# --- globals

my %DefOpt = (
    log_level => 'info',
    bitrate => '64k',
    samprate => '44000',
    copy => 1,
    format => 'mp3',
);
my %Opt = %DefOpt;

GetOptions(
    'bitrate=s' => \$Opt{bitrate},
    'samprate=i' => \$Opt{samprate},
    'help' => \$Opt{help},
    'copy!' => \$Opt{copy},
    'format=s' => \$Opt{format},
);
if ($Opt{help}) {
    print <<EOF;
$0 [options] [FILES ...]

If files are not specified, process all movie files in current dir.

Options:
 --nocopy       Do not attempt to just copy the audio from movie
                 files, but do a re-encoding to MP3
 --bitrate      Set bitrate (default: $DefOpt{bitrate}).
 --samprate     Set sampling rate (default: $DefOpt{samprate}).
 --format F     Set output format (default: $DefOpt{format}).
EOF
    exit 0;
}

my $bin = which("avconv") || which("ffmpeg"); die "Can't find avconv/ffmpeg" unless $bin;
my $cwd = getcwd;
my @files;
if (@ARGV) { @files = @ARGV } else { @files = (<*.ogg>, <*.avi>, <*.mpg>, <*.mpeg>, <*.rmvb>, <*.flv>, <*.mp4>) }
for my $f (@files) {
    chdir $cwd;
    $log->info("Processing file '$f' ...");
    my $d = $f; $d =~ s/\.\w+$/\.$Opt{format}/;
    if (-e $d) {
        $log->warn("'$d' already exists, skipped");
        next;
    }
    my @opts = ();
    if ($f =~ /\.rmvb$/ || !$Opt{copy}) {
        push @opts, "-ab $Opt{bitrate} -ar $Opt{samprate}";
    } else {
        push @opts, "-acodec copy";
    }
    system $bin." -i ".shell_quote($f)." ".join(" ", @opts)." ".shell_quote($d);
    if ($?) {
        $log->error("Failed extracting audio from '$f': $! ($?), skipped");
        next;
    }
}
