#!/usr/bin/perl -w

use strict;
use App::Options (
    option => {
        rsync_opts => {
            description => "Extra rsync options",
            type        => "string",
            default     => "",
            required    => 0,
        },
        hist_levels => {
            description => "A comma-separated list of numbers to specify the history levels",
            type        => "string",
            default     => "-7,4,3",
            required    => 0,
        },
    }
);
use Cwd qw(abs_path);
use POSIX;
use Time::Local;

# --- subs

sub esc {
    local $_ = shift;
    s/'/'"'"'/g;
    "'$_'";
}

# --- main

# check args
my $hist_levels;
if ($App::options{hist_levels} !~ /^(-?\d+)(,\s*(-?\d+))*$/) {
    die "Invalid hist_levels, please use a comma-separated list of numbers\n";
}
$hist_levels = [split /,\s*/, $App::options{hist_levels}];
@ARGV == 2 or die "Usage: $0 <src> <dest>\n";
my ( $src, $dst ) = @ARGV;
for ( $src, $dst ) {s!/$!!}
( -d $src ) or die "Src haruslah direktori yang sudah ada: $src\n";
system "mkdir -p " . esc("$dst/current");
( -d "$dst/current" ) or die "Gagal membuat creating $dst/current\n";

# do it!
print "Membuat backup terbaru $src ke $dst/ ...\n";
system "nice -n19 rsync $App::options{rsync_opts} -av --del --force "
    . "--link-dest "
    . esc( abs_path("$dst") . "/current" ) . " "
    . esc("$src/") . " "
    . esc("$dst/.work/") . "\n";
warn "Perintah rsync tidak sukses, sebaiknya Anda periksa\n" if $?;

chdir($dst) or die "Tidak bisa chdir ke $dst: $!\n";
system "touch .current.timestamp";
my $now = time;
my @st  = stat(".current.timestamp");
my $tstamp
    = POSIX::strftime( "%Y-%m-%d\@%H:%M:%S+00", gmtime( $st[9] || $now ) );
rmdir "current" or rename "current", "hist.$tstamp";
rename ".work", "current";

print "Menghapus histori backup yang sudah terlalu lama ...\n";
for my $level ( 1 .. @$hist_levels ) {
    my $is_highest_level  = $level == @$hist_levels;
    my $prefix            = "hist" . ( $level == 1 ? '' : $level );
    my $prefix_next_level = "hist" . ( $level + 1 );
    my $n                 = $hist_levels->[ $level - 1 ];
    my $moved             = 0;

    if ( $n > 0 ) {
        print "Hanya menyimpan $n buah histori backup L$level ...\n";
        my @f = reverse sort grep { !/\.work$/ } glob "$prefix.*";
        my $any_tagged = ( grep {/t$/} @f ) ? 1 : 0;
        for my $f ( @f[ $n .. @f - 1 ] ) {
            my ( $st, $tagged ) = $f =~ /[^.]+\.(.+?)(t)?$/;
            my $f2 = "$prefix_next_level.$st";
            if (   !$is_highest_level
                && !$moved
                && ( $tagged || !$any_tagged ) )
            {
                print "Memindahkan level histori backup: $f -> $f2\n";
                system "mv " . esc($f) . " " . esc($f2);
                $moved++;
                if ( $f ne $f[0] ) {
                    my $e3 = esc( $f[0] );
                    system "mv $e3 ${e3}t";
                }
            }
            else {
                print "Menghapus histori backup: $f ...\n";
                system "nice -n19 rm -rf " . esc($f);
            }
        }
    }
    else {
        $n = -$n;
        print "Hanya menyimpan histori backup L$level sd $n hari ...\n";
        my @f = reverse sort grep { !/\.work$/ } glob "$prefix.*";
        my $any_tagged = ( grep {/t$/} @f ) ? 1 : 0;
        for my $f (@f) {
            my ( $st, $tagged ) = $f =~ /[^.]+\.(.+?)(t)?$/;
            my $f2 = "$prefix_next_level.$st";
            my $t;
            $st =~ /(\d\d\d\d)-(\d\d)-(\d\d)\@(\d\d):(\d\d):(\d\d)\+00/;
            $t = timegm( $6, $5, $4, $3, $2 - 1, $1 ) if $1;
            $st && $t or do {
                print "Histori backup salah format: $f, diabaikan\n";
                next;
            };
            if ( $t > $now ) {
                print "Histori backup di masa depan? $f, diabaikan\n";
                next;
            }
            my $delta = ( $now - $t ) / 86400;
            if ( $delta > $n ) {
                if (   !$is_highest_level
                    && !$moved
                    && ( $tagged || !$any_tagged ) )
                {
                    print "Memindahkan level histori backup: $f -> $f2\n";
                    system "mv " . esc($f) . " " . esc($f2);
                    $moved++;
                    if ( $f ne $f[0] ) {
                        my $e3 = esc( $f[0] );
                        system "mv $e3 ${e3}t";
                    }
                }
                else {
                    print "Menghapus history backup: $f ...\n";
                    system "nice -n19 rm -rf " . esc($f);
                }
            }
        }
    }
}

__END__
