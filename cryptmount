#!/usr/bin/perl -w

# XXX unfinished

use strict;
use Cwd qw(:abs_path);
use Getopt::Std;
use Log::Log4perl qw(:easy);

use constant NUM_LOOP_DEVICES => 8;

Log::Log4perl->easy_init($DEBUG);

# --- methods/routines

sub mount_encrypted {
    my ($path, $mpoint, @opts) = @_;

    # find a free loop device
    my $loop_num;
    my %looped_paths = ();
    for my $i (0..NUM_LOOP_DEVICES-1) {
        my $output = `losetup /dev/loop$i 2>/dev/null`;
        if ($output !~ /\((.*)\)/)
          ERROR "Can't check loop device $i"
        elsif $1.empty?
          loop_num = i if !loop_num
        else
          looped_paths[$1] = 1
        end
      }
      if !loop_num
        puts "ERROR: Can't mount encrypted volume #{path}: No more free loop devices"
        return
      end
      if looped_paths[path]
        puts "INFO: Not mounting encrypted volume #{path}: Already looped"
        return
      end
    end

    mapper_name = path.gsub(%r([^a-z]+), "_")
    if FileTest.exists?("/dev/mapper/#{mapper_name}")
      puts "INFO: Not mounting encrypted volume #{path}: /dev/mapper/#{mapper_name} already exists"
      return
    end

    $log.puts("Mounting #{path}")

    if use_loop
      system "losetup /dev/loop#{loop_num} #{path}"
      if $? != 0
        puts "ERROR: Can't mount encrypted volume #{path}: failed to loop"
        return
      end
    end

    target = use_loop ? "/dev/loop#{loop_num}" : path
    system "cryptsetup create #{mapper_name} #{target}"
    if $? != 0
      puts "ERROR: Can't mount encrypted volume #{path}: failed to cryptsetup create"
      return
    end

    mount("/dev/mapper/#{mapper_name}", mpoint, fstype, opts)
