#!/usr/bin/env perl

# created: 2014-07-24

unless (@ARGV == 1) {
    print <<'_';
Usage example: parse-comp-line0-using-perl 'cmd --^'

This will set COMP_LINE to 'cmd --' and COMP_POINT to 6 (from the position of
the caret, which will then be stripped from COMP_LINE). So, this script adds
convenience compared to counting COMP_POINT manually.

After that, Complete::Bash's parse_cmdline() will be called so the COMP_LINE and
COMP_POINT will be converted to COMP_WORDS and COMP_CWORD.

_
    exit 0;
}

my $comp_line  = shift @ARGV;
my $comp_point = index($comp_line, '^');
die "Please put a caret (^) somewhere in the comp_line to indicate comp_point\n"
    unless $comp_point >= 0;
$comp_line =~ s/\^//;

$ENV{COMP_LINE}  = $comp_line;
$ENV{COMP_POINT} = $comp_point;
require Complete::Bash;
my ($words, $cword) = @{ Complete::Bash::parse_cmdline(undef, undef, ':=') };
print "# words=[\n"; for (@$words) { print "<$_>\n" }; print "]\n";
print "# cword=$cword\n";
