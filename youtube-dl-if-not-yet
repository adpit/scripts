#!/usr/bin/env perl

use 5.010;
use strict;
use warnings;
use Log::Any '$log';

use IPC::System::Options qw(system);
use Perinci::CmdLine::Any;

our %SPEC;

my $re_video_id = '[A-Za-z0-9_-]{11}';

$SPEC{app} = {
    v => 1.1,
    args => {
        urls_or_ids => {
            'x.name.is_plural' => 1,
            'x.name.singular' => 'url_or_id',
            schema => ['array*', of=>'str*', min_len=>1],
            req => 1,
            pos => 0,
            greedy => 1,
        },
        done_ids_file => {
            schema => 'str*',
            req => 1,
        },
    },
    deps => {
        prog => 'youtube-dl',
    },
};
sub app {
    my %args = @_;

    open my($fh), "<", $args{done_ids_file}
        or return [500, "Can't open '$args{done_ids_file}': $!"];
    my %done_ids;
    while (<$fh>) {
        chomp;
        $done_ids{$_}++;
    }

    my @ids;
    for my $url_or_id (@{$args{urls_or_ids}}) {
        my $id;
        if ($url_or_id =~ /\A$re_video_id\z/) {
            $id = $url_or_id;
        } elsif ($url_or_id =~ m!\Ahttps?://(?:www\.)youtube\.com.+?v=($re_video_id)!i) {
            $id = $1;
        } else {
            $log->warnf("Unknown URL/ID '%s', skipped", $url_or_id);
            next;
        }
        if ($done_ids{$id}) {
            $log->infof("Video ID %s has been downloaded, skipped", $id);
            next;
        }
        push @ids, $id;
    }

    return [304, "No videos to download"] unless @ids;

    system "youtube-dl", map {"https://www.youtube.com/watch?v=$_"} @ids;
    [200];
}

Perinci::CmdLine::Any->new(
    url=>'/main/app',
    log=>1,
)->run;
