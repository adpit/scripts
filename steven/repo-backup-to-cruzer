#!/usr/bin/perl -w

use autodie;
use strict;
use Log::Log4perl qw(:easy);
Log::Log4perl->easy_init($DEBUG);

use App::Options (option => {
    nocheck => { type => 'boolean', required => 1, default => 0, },
});

unless ($App::options{nocheck}) {
    INFO "Checking repo status ...";
    my $which = $0 =~ /-pc$/ ? "pc" : "netbook";
    my $cmd = "repo-check-status-$which";
    my $output = `$cmd 2>&1`;

    if ($? != 0) { LOGDIE "$cmd command failed, please check first.\n$cmd Output:\n$output" }
    if ($output =~ /needs commit|Untracked files/) { LOGDIE "Some repos are not clean, please check first.\n$cmd Output:\n$output" }
    if ($output =~ /not a git/) { LOGDIE "Some dirs are not repos, please check first.\n$cmd Output:\n$output" }
}

print "Searching for backup media ...\n";
my $mp;
unless (($mp) = `LANG=C mount` =~ m! on (/media/cruzer0?)!m) { die "Can't find mounted backup media" }

print "Doing backup ... \n";
system "rsync -Pav --include /repo ".
    "--include '/repo/*' --include '/repo/*/.git' --include '/repo/*/.git/**' ".
    "--include '/repo/.remote' --include '/repo/.remote/**' ".
    "--exclude '*' --del --force --delete-excluded $ENV{HOME}/repo $mp/";
if ($? != 0) { LOGDIE "Backup does not succeed, please check" }
