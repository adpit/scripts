#!/usr/bin/perl

use 5.010;
use strict;
use warnings;
use Log::Any::App '$log';
BEGIN { no warnings; $::Log_Level = 'info' }

use File::chdir;
use Cwd qw(getcwd);

sub _mysystem {
    $log->tracef("system(): cwd=%s, cmd=%s", $CWD, join(" ", @_));
    system @_;
}

sub is_online {
    state $online;
    return $online if defined($online);
    my $output = `host www.google.com`;
    $online = !$?;
    $log->debug("We are ".($online ? "online" : "not online ($output)"));
    $online;
}

sub is_false {
    defined($_[0]) && !$_[0];
}

if (is_false $ENV{POST_COMMIT}) {
    $log->info("Skipping post-commit script");
    exit 0;
}

$log->debug("$0 started");

my $repo_dir = getcwd;
my $repo_name = $repo_dir;
$repo_name =~ s!.+/!!;
$log->debugf("repo name is %s", $repo_name);

my ($branch) = `git branch` =~ /^\* (.+)/m;
$log->debugf("branch is %s", $branch);

my $is_priv    = $repo_name =~ /^priv-/
    || (-e "$repo_dir/.git/.private") || (-e "$repo_dir/.git/.priv") ? 1:0;
my $is_mwn     = $repo_name =~ /^mwn(-|$)/
    || (-e "$repo_dir/.git/.mwn") ? 1:0;
my $is_perl    = $repo_name =~ /(^|-)perl-/;
my $is_ruby    = $repo_name =~ /(^|-)perl-/;
my $is_python  = $repo_name =~ /(^|-)python-/;
my $is_php     = $repo_name =~ /(^|-)php-/;
my $is_js      = $repo_name =~ /(^|-)js-/;
my $is_media   = $repo_name =~ /(^|-)media-/;
my $is_spanel  = $repo_name =~ /(^|-)spanel(-|$)/
    || (-e "$repo_dir/.git/.spanel") ? 1:0;
my $is_public  = !$is_priv && !$is_mwn && !$is_spanel;

$log->debug("is_priv? $is_priv. is_mwn? $is_mwn. is_perl? $is_perl. ".
                "is_media? $is_media. is_spanel? $is_spanel. ".
                    "is_public? $is_public");

my $backup_dir = "/backup/mnt2/repos"; #"/backup/mnt/$ENV{SYSTEM}.local";
$log->trace("Checking whether backup_dir $backup_dir exists ...");
my $has_backup_part = (-d $backup_dir);

# push to backup partition, if available
if ($has_backup_part) {
    my $remote_dir = "$backup_dir/$repo_name";
    #"$backup_dir/current/home/$ENV{USER}/repos/$repo_name";
    $log->trace("Checking whether remote_dir $remote_dir exists ...");
    if (-d $remote_dir) {
        {
            $log->info("Pushing to backup partition ...");
            local $CWD = $remote_dir;
            _mysystem "git", "pull", $repo_dir;
        }
    }
}

# push certain public repos to public dir, for things like sharing scripts to
# other users
my $pubdir = "/u/$ENV{USER}/public/repos";
if ((-d $pubdir) && $is_public && $repo_name =~ /^(scripts|references)$/) {
    $log->info("Pushing to public ...");
    {
        local $CWD = $pubdir;
        _mysystem("gitbunch", "sync",
                  "--exclude-files", "--exclude-non-git-dirs",
                  "--source", "$repo_dir/..",
                  "--target", "$pubdir",
                  "--include-repos", "[$repo_name]");
    }
}

# push public repos to github, for backup as well
my $git_user = "sharyanto";
if ($is_public && is_online()) {
    my $do_github = !is_false($ENV{GITHUB});
    if (!$do_github) {
        $log->info("Skipping posting to github");
    } else {
        $log->info("Pushing to github ...");
        $log->trace("Checking whether remote origin has been added ...");
        my $output = `git config --get remote.origin.url`;
        if ($?) {
            $log->debug("remote origin doesn't seem be added yet, adding ...");
            _mysystem "git", "remote", "add", "origin",
                "git\@github.com:$git_user/$repo_name.git";
        }
        _mysystem "git", "push", "origin", "master";
    }
}

# push all repos except private ones to hloc
my $hloc_dir = "/media/bismuthb/home/sloki/user/steven/public/git";
$log->trace("Checking whether hloc_dir $hloc_dir exists ...");
if (!$is_priv && (-d $hloc_dir)) {
    {
        $log->info("Pushing to hloc ...");
        local $CWD = $hloc_dir;
        _mysystem("gitbunch", "sync",
                  "--exclude-files", "--exclude-non-git-dirs",
                  "--source", "$repo_dir/..",
                  "--target", "$hloc_dir",
                  "--include-repos", "[$repo_name]");
    }
    $log->info("Announcing to forumi ...");
    my ($forumid, $topicid);
    if ($is_perl) {
        ($forumid, $topicid) = (51, 31078);
    } elsif ($is_php) {
        ($forumid, $topicid) = (51, 31297);
    } elsif ($is_python) {
        ($forumid, $topicid) = (51, 31298);
    } elsif ($is_ruby) {
        ($forumid, $topicid) = (51, 31299);
    } elsif ($is_js) {
        ($forumid, $topicid) = (51, 31300);
    } elsif ($repo_name eq 'scripts') {
        ($forumid, $topicid) = (51, 29724);
    } elsif ($repo_name eq 'spanel' && $branch eq 'stable') {
        ($forumid, $topicid) = (28, 29723);
    } elsif ($repo_name eq 'spanel' && $branch eq 'dev') {
        ($forumid, $topicid) = (28, 29718);
    } elsif ($repo_name eq 'mwn') {
        ($forumid, $topicid) = (51, 29725);
    } elsif ($repo_name eq 'mwn-foruminternal') {
        ($forumid, $topicid) = (51, 28910);
    } elsif ($repo_name eq 'mwn-masterkey') {
        ($forumid, $topicid) = (51, 29726);
    } elsif ($repo_name eq 'mwn-site') {
        ($forumid, $topicid) = (51, 29732);
    } elsif ($repo_name eq 'mwn-steven-webdev') {
        ($forumid, $topicid) = (51, 25544);
    } elsif ($repo_name eq 'mwn-campus') {
        ($forumid, $topicid) = (51, 29753);
    } else {
        die "Don't know which forum/thread to post announcement to".
            " (repo=$repo_name, branch=$branch)";
    }
    _mysystem("post-git-commit-log-to-phpbb2",
              "--phpbb2_post_forum_id=$forumid",
              "--phpbb2_post_topic_id=$topicid");
}

# push from PC to laptop, if laptop is available
my $laptop_dir = "$ENV{HOME}/hbp/repos";
if (-d $laptop_dir) {
    {
        $log->info("Pushing to laptop ...");
        local $CWD = $laptop_dir;
        _mysystem("gitbunch", "sync",
                  "--exclude-files", "--exclude-non-git-dirs",
                  "--source", "$repo_dir/..",
                  "--target", "$laptop_dir",
                  "--include-repos", "[$repo_name]");
    }
}

# push from laptop to PC, if PC is available
my $pc_dir = "$ENV{HOME}/hb/repos";
if (-d $pc_dir) {
    {
        $log->info("Pushing to PC ...");
        local $CWD = $pc_dir;
        _mysystem("gitbunch", "sync",
                  "--exclude-files", "--exclude-non-git-dirs",
                  "--source", "$repo_dir/..",
                  "--target", "$pc_dir",
                  "--include-repos", "[$repo_name]");
    }
}

# push to external hdd, if available
my $exthdd_dir = "/media/elements/home/$ENV{USER}/repos";
if (-d $exthdd_dir) {
    {
        $log->info("Pushing to external hdd ...");
        local $CWD = $exthdd_dir;
        _mysystem("gitbunch", "sync",
                  "--exclude-files", "--exclude-non-git-dirs",
                  "--source", "$repo_dir/..",
                  "--target", "$exthdd_dir",
                  "--include-repos", "[$repo_name]");
    }
}

$log->debug("$0 ended");
