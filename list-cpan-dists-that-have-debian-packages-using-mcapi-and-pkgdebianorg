#!/usr/bin/env perl

# created: 2012-06-12

use 5.010;
use strict;
use warnings;

use Data::Dump qw(dump);
use File::Slurp;
use IO::Uncompress::Gunzip qw(gunzip $GunzipError);
use JSON;
use LWP::Simple;

my $cachef = "allpackages.cache";

###

my $json = JSON->new->allow_nonref;
my $debug = $ENV{DEBUG};
my $res;

sub dist2deb {
    my ($dist) = @_;
    "lib".lc($dist)."-perl";
}

die "Usage: $0 <CPANID> ...\n" unless @ARGV;

binmode STDOUT, ":utf8";

my @pkgs;
unless ((-f $cachef) && (-M _) < 7) {
    say "DBG: Downloading Debian packages list to $cachef ..." if $debug;
    $res = get "http://packages.debian.org/unstable/allpackages?format=txt.gz";
    gunzip(\$res => $cachef) or die "gunzip failed: $GunzipError\n";
}
for (read_file $cachef) {
    next unless /^(lib\S+-perl) \(/;
    push @pkgs, $1;
}
#say "DBG: Packages: ".dump(\@pkgs) if $debug;

say "DBG: Querying MetaCPAN ..." if $debug;
$res = get "http://api.metacpan.org/v0/release/_search?q=author:".
    uc($ARGV[0])."%20AND%20status:latest&fields=name&size=5000";
$res = $json->decode($res);
die "MetaCPAN timed out" if $res->{timed_out};
my @dists;
for my $hit (@{ $res->{hits}{hits} }) {
    my $dist = $hit->{fields}{name};
    $dist =~ s/-\d.+//;
    push @dists, $dist;
}
#say "DBG: Dists: ".dump(\@dists) if $debug;

for my $dist (@dists) {
    my $pkg = dist2deb($dist);
    say $pkg if $pkg ~~ @pkgs;
}
