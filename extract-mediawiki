#!/usr/bin/env perl

# mengambil sekumpulan page dari halaman wiki untuk dipublish sebagai
# sekumpulan file HTML statik yang telah dibersihkan dari
# atribut2/link2 edit/search milik mediawiki.

# author: steven haryanto
# created: 2006-11-15
# last updated: 2006-11-15

use warnings;
use strict;
require LWP::UserAgent;
require HTTP::Request;
use File::Slurp;
use URI::Escape;
use HTML::Entities;
use App::Options (
  option => {
    wiki_url => {
      description => 'Wiki URL, example: http://domain.com or http://domain.com/wiki',
      type => 'string',
      default => undef,
      required => 1,
    },
    target_dir => {
      description => 'Directory to store the HTML files, will be created if not already exists',
      type => 'string',
      default => undef,
      required => 1,
    },
    regex => {
      description => 'Pages to include, e.g. ".*" to include all pages, "^QA " to only incluse pages starting with "QA "',
      type => 'string',
      default => ".*",
      required => 1,
    },
    header => {
      description => 'Text to put at the beginning of every HTML page',
      type => 'string',
      default => "",
      required => 1,
    },
    footer => {
      description => 'Text to put at the end of every HTML page',
      type => 'string',
      default => "",
      required => 1,
    },
    proxy => {
      description => 'HTTP proxy to use, e.g. http://USER:PASS@proxyhost:8000/',
      type => 'string',
      default => undef,
      required => 0,
    },
    include_images => {
      description => 'Whether to include images',
      type => 'boolean',
      default => 1,
      required => 0,
    },
  }
);

# --- main

my $Ua = LWP::UserAgent->new;
$Ua->proxy(['http'], $App::options{proxy}) if $App::options{proxy};

my $Wiki_Url = $App::options{wiki_url};
$Wiki_Url =~ s#/+$##;
my ($Wiki_Host, $Wiki_Path) = $Wiki_Url =~ m#^(https?://(?:[^:]+:[^@]+@)?[\w.-]+(?::\d+)?)(.*)#i
or die "FATAL: Invalid wiki URL\n";

my $Target_Dir = $App::options{target_dir};
if (!(-e $Target_Dir)) {
  mkdir $Target_Dir, 0755 or die "FATAL: Can't mkdir target dir `$Target_Dir': $!, aborting ...\n";
} elsif (!(-d $Target_Dir)) {
  die "FATAL: Target dir `$Target_Dir' is not a dir, aborting ...\n";
}

my $re = qr/$App::options{regex}/;
#my %titles = (); # key = title asli page, value = nama file

# start from the list of all pages
my ($code, $title, $content) = Get_Mwiki_Page("Special:Allpages");
while ($content =~ /<a href="([\w-]+)\.html"/g) {
  my $title = $1;
  #print $re;
  next unless $title =~ $re;
  my ($c2, $t2, $ct2) = Get_Mwiki_Page($title);
  write_file("$Target_Dir/$title.html", $ct2);
}

# --- subs

# return: (http status, title of page, page content)
sub Get_Mwiki_Page {
  my ($title, $process) = @_;
  $process = 1 if !defined($process);
  $title =~ s/ /_/g;
  my $url = "$Wiki_Url/index.php?title=$title";
  my $resp = $Ua->get($url);
  my $real_title;
  my $content;

  if ($resp->is_success) {
    $content = $resp->content;
    ($real_title) = $content =~ m#<h1 class="firstHeading">(.+?)</h1>#s;
    if ($process) {
      $content = 
        $App::options{header} . 
        "<h1>$real_title</h1>\n".
        clean_htmlpage($content) . 
        $App::options{footer};
    }
  } else {
    die "FATAL: Failed retrieving URL: $url, HTTP error code: ".$resp->code."\n";
  }

  return ($resp->code, $real_title, $content);
}

# returns: (http status, image data)
sub Get_Mwiki_Image {
  my ($path) = @_;
  my $resp = $Ua->get("$Wiki_Host$path");
  my $content;

  if (!$resp->is_success) {
    $content = $resp->content;
  }

  return ($resp->code, $content);
}

# --- subs

sub clean_htmlpage {
  local $_ = shift;

  # trim stuff...
  s#.+<!-- start content -->##s; s#<!-- end content -->.+##s;
  s#<div class="(editsection|printfooter)".+?</div>##sg;
  s#<form.+?</form>##isg;

  my $qpath = quotemeta($Wiki_Path);

  # convert normal page
  s#"$qpath/index\.php\?title=((?:Category:)?[\w-]+)"#"$1.html"#g;
  # convert image urls
  s#<img src="$qpath/images/(.+?)"#<img src="images/$1"#g;

  # bunuh semua link wikimedia lainnya
  s#<a href="(?:$qpath/index\.php|$qpath).*?>(.+?)</a>#$1#g;

  $_;
}
