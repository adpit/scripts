#!/usr/bin/perl -w

use 5.010;
use autodie;
use strict;
use App::Options (
    option => {
        memory_path => { type => 'string' },
        max_look_behind => { type => 'integer', default => 500 },
        phpbb2_post_path => { type => 'string' },
        phpbb2_post_profile => { type => 'string', required => 1 },
        author_re => {
            type => 'string', required => 0,
            description => 'Only post commits with author matching this regex',
        },
        dry_run => { type => 'boolean', required => 0, default => 0 },
    },
);
use Cwd qw(getcwd);
use File::Slurp::Shortcuts qw(slurp_cq);
use File::Which;
use GDBM_File;
use Log::Any::App '$log';

my $output;
$output = `git branch`;
my ($branch) = $output =~ /^\* (.+)/m
    or die "Can't find out current branch (can't grok output of `git branch`)";

# check args

my $repo_name = getcwd; $repo_name =~ s!.*/!!;
my $prog_name = $0; $prog_name =~ s!.*/!!;

my $memory_path = $App::options{memory_path} //
    "$ENV{HOME}/.app/$prog_name.memory.$repo_name.$branch.db";
$log->debug("memory_path = $memory_path");
my %memory;
tie %memory, 'GDBM_File', $memory_path, &GDBM_WRCREAT, 0640;

my $phpbb2_post_path = $App::options{phpbb2_post_path} // which("phpbb2-post");
die "Can't find phpbb2-post" unless $phpbb2_post_path;
die "Can't execute phpbb2-post in $phpbb2_post_path"
    unless -x $phpbb2_post_path;

my $max_look_behind = $App::options{max_look_behind} + 0;

my $author_re;
if ($App::options{author_re}) {
    eval { $author_re = qr/$App::options{author_re}/ };
    die "Invalid regex: $App::options{author_re}: $@" if $@;
}

# get ids to commit

my @revs0;
my @revs;
$output = `git log --abbrev=40 --reverse -$max_look_behind`;
die "Failed doing 'git log: $!" if $?;
push @revs0, [$1, $2] while $output =~ /^commit ([0-9a-f]+)\nAuthor: (.+)/mg;
for (@revs0) {
    if ($author_re && $_->[1] !~ $author_re) {
        $log->debug("Skipping commit $_->[0] because author ($_->[1]) ".
                    "doesn't match author_re ($author_re)");
        next;
    }
    if ($memory{$_->[0]}) {
        $log->debug("Skipping commit $_->[0] because it's already posted");
        next;
    }
    push @revs, $_->[0];
}

$log->infof("Number of commits to post: %d", scalar(@revs));

my $fail = 0;
my $i = 0;
for (@revs) {
    $i++;
    if ($App::options{dry_run}) {
        $log->infof("DRYRUN: ($i/%d) Posting rev $_ to phpBB2 forum ...", scalar(@revs));
        next;
    }
    $log->infof("($i/%d) Posting rev $_ to phpBB2 forum ...", scalar(@revs));
    system "( echo 'Subject: commit $repo_name ($branch:$_)'; ".
        "echo; echo -n '[code]'; ".
        "git log -1 -p $_; echo '[/code]' ) | ".
        "'$phpbb2_post_path' --profile=$App::options{phpbb2_post_profile} --bbcode=1 -";
    if ($?) {
        warn "Posting failed (exit=$?), aborting ...";
        $fail++;
        last;
    } else {
        $log->debug("Updating memory ...");
        $memory{$_} = time;
    }
}

# XXX only remember n commits in memory
