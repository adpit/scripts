#!/usr/bin/perl -w

use strict;
use App::Options (
    option => {
        counter_path => { type => 'string', required => 1,},
        counter => {
            type => 'string', required => 0,
            description => 'As an alternative to --counter_path, you can also '.
                'specify last commit ID posted directly via --counter',
        },
        phpbb2_post_profile => { type => 'string', required => 1, },
        author_re => {
            type => 'string', required => 0,
            description => 'Only post commits with author matching this regex',
        },
        dry_run => { type => 'boolean', required => 0, default => 0, },
    },
);
use File::Slurp;
use Log::Any::App '$log';

my ($branch) = `git branch` =~ /^\* (.+)/m
    or die "Can't find out current branch (can't grok output of `git branch`)";

my $counter;
if ($App::options{counter}) {
    $counter = $App::options{counter};
} else {
    for ("$App::options{counter_path}.branch=$branch",
         $App::options{counter_path}) {
        $counter = read_file($_, err_mode => 'quiet');
        last if $counter;
    }
    die "Can't read counter file or counter not initialized: ".
        "$App::options{counter_path} or ".
            "$App::options{counter_path}.branch=$branch" unless $counter;
}

my $author_re;
if ($App::options{author_re}) {
    eval { $author_re = qr/$App::options{author_re}/ };
    die "Invalid regex: $App::options{author_re}: $@" if $@;
}

my @revs0;
my @revs;
my $output = `git log $counter..HEAD --reverse`;
die "Failed doing 'git log $counter..HEAD': $!" if $?;
push @revs0, [$1, $2] while $output =~ /^commit ([0-9a-f]+)\nAuthor: (.+)/mg;
$log->infof("Number of commits between $counter .. HEAD: %d", scalar(@revs0));
for (@revs0) {
    if ($author_re && $_->[1] !~ $author_re) {
        $log->debug("Skipping commit $_->[0] because author ($_->[1]) ".
                    "doesn't match author_re ($author_re)");
    }
    push @revs, $_->[0];
}

$log->infof("Number of commits to post: %d", scalar(@revs));

my $fail = 0;
for (@revs) {
    if ($App::options{dry_run}) {
        $log->info("DRYRUN: Posting rev $_ to phpBB2 forum ...");
        next;
    }
    $log->info("Posting rev $_ to phpBB2 forum ...");
    system "( echo 'Subject: commit message'; echo; echo -n '[code]'; ".
        "git log -1 -p $_; echo '[/code]' ) | ".
        "phpbb2-post --profile=$App::options{phpbb2_post_profile} --bbcode=1 -";
    if ($?) {
        warn "Posting failed (exit=$?), aborting ...";
        $fail++;
        last;
    } else {
        if ($App::options{counter_path}) {
            $log->debug("Updating counter file to $_ ...");
            write_file($App::options{counter_path}, $_);
        }
    }
}
