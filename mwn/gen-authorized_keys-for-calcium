#!/usr/bin/perl

use lib "/c/lib/perl/cpan";
use lib "/c/lib/perl";
use Spanel::Utils;
use File::Slurp;

my $key = read_file("$ENV{HOME}/mwn/ssh/hosting-remote-backup/id_dsa-remote_backup.pub");
chomp($key);
$key =~ s/(.+) \S+/$1/; # buang email

my @servers =
    sort {$a->{local}{id} cmp $b->{local}{id}}
    grep {$_->{backup}{remote}{servers}[0] =~ /calcium/}
    find_servers(return => "config");

if ($0 =~ /authorized_keys/) {
    print "# This portion of authorized_keys first generated by $0 on ".scalar(localtime)."\n";
    for (@servers) {
        my $id = $_->{local}{id};
        my $ips = join(",", @{ $_->{local}{ip} });
        print qq[from="$ips",];
        print qq[command="if false; then echo 'Still copying backup to history, please try again later 1>&2'; exit 1;];
        print qq[else mkdir -p /backup/remote-backups/$id;];
        print qq[rsync --server -az --del /backup/remote-backups/$id; fi",]; # XXX after rsync, do cp -la / make backup history
        print qq[no-port-forwarding,no-X11-forwarding,no-agent-forwarding ];
        print $key;
        print qq[ remote-backup\@$id];
        print "\n";
    }
    print "\n";
}

if ($0 =~ /hosts.allow/) {
    print "# This portion of hosts.allow first generated by $0 on ".scalar(localtime)."\n";
    for (@servers) {
        my $ips = join " ", @{$_->{local}{ip}};
        print qq[sshd: $ips\n];
    }
    print "\n";
}

