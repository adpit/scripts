#!/usr/bin/perl

use 5.010;
use strict;
use warnings;

use PHP::Serialization qw(unserialize);
use Sub::Spec::CmdLine qw(run);

our %SPEC;

$SPEC{convert} = {
    summary => 'Convert output of parse-ibanking-statement ',
    args    => {
        accnickname => ['str*' => {
            summary => 'Bank account nick name',
            arg_pos => 0,
        }],
    },
};
sub convert {
    my %args = @_;
    my $accnickname = $args{accnickname}
        or return [400, "Please specify accnickname"];

    my $resp;
    my $txs;

    {
        local $/ = undef;
        $resp = unserialize(scalar <STDIN>);
        $txs  = $resp->[2]{stmt}{transactions};
        die "No transactions" unless $txs;
    }

    my @res;
    for my $tx (sort {($a->{counter}//0) <=> ($b->{counter}//0)} @$txs) {
        my $type = $tx->{amount} > 0 ? 1 : 11; # 1=MUNGKIN PEMBYRN, 11=DEBIT LAIN2
        push @res, (
            "INSERT INTO mkbanktx ",
            "(type,date,counter,bankaccid,amount,currency,curbal,description) VALUES (",
            "$type,",
            "'$tx->{date}',",
            "$tx->{seq}, ",
            "(SELECT id FROM mkbankaccount WHERE nickname='$accnickname'),",
            "$tx->{amount},'IDR',",
            "$tx->{balance},",
            "'$tx->{description}');\n",
        );
    }

    [200, "OK", join("", @res)];
}

run(load=>0, module=>'main', sub=>'convert');
