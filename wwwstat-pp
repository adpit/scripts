#!/usr/bin/perl
# My very own, simple-minded web log statistics
# Sh
# v0.0000 Dec 8 98
# v0.0001 Dec 26 98 +stat keywords from search engines
# v0.0002 Jun 13 99 +search sites (sebelumnya udah, tapi versi itu ilang... :)
# v0.0003 000425, rekam status.
# v0.00030000001 000913, nothing. cuma nambah signature :p
# 020930 - hapus dulu query string di url
# Todo: OS stat

$DEBUG=1;
$separator = "\n\n" . "=" x 80 . "\n";

while ($line=<>) {
   ($host, $r_host, $r_user, $tanggal, $method, $url, $status, $bytes, $referer, $ua) =
   ($line =~
   /^(.*?) (-|\S+) (-|\S+) \[(.*?)\] "(\w+) (\S+) .*?" (\d+) (\d+|-) "(.*?)" "(.*?)"$/
   )

#  ($host, $r_host, $r_user, $tanggal, $method, $url, $bytes) =
#  ($line =~
#  /^(.*?) (-|\S+) (-|\S+) \[(.*?)\] "(\w+) (\S+) .*?" \d+ (\d+|-)$/
#  )

  or $DEBUG && print STDERR "not match: line ke ", $hits+1, ": $line";

  ($urlnq = $url) =~ s/\?.*//;
  ($referernq = $referer) =~ s/\?.*//;
  
  $tanggal_awal=$tanggal if $hits==0;
  $hits++;
  $hosts{$host}++;
  $methods{$method}++;
  $urls{$urlnq}++;
  $total_bytes+=$bytes;
  $referers{$referernq}++;
  $uas{$ua}++;
  $statuses{$status}++;

  # statistik browser
  if    ($ua=~/MSIE 2/)                                      {$tipe='IE 2x'}
  if    ($ua=~/MSIE 3/)                                      {$tipe='IE 3x'}
  elsif ($ua=~/MSIE 4/)                                      {$tipe='IE 4x'}
  elsif ($ua=~/MSIE 5/)                                      {$tipe='IE 5x'}
  elsif ($ua=~/Lynx/)                                        {$tipe='Lynx'}
  elsif ($ua=~/Opera/)                                       {$tipe='Opera'}
  elsif ($ua=~/^Mozilla\/2/ && $ua!~/\(.*?compatible.*?\)/i) {$tipe='Navigator 2.x'}
  elsif ($ua=~/^Mozilla\/3/ && $ua!~/\(.*?compatible.*?\)/i) {$tipe='Navigator 3.x'}
  elsif ($ua=~/^Mozilla\/4/ && $ua!~/\(.*?compatible.*?\)/i) {$tipe='Navigator 4.x'}
  else                                                       {$tipe='other'}
  $tipe_browser{$tipe}++;

  # statistik keyword
  %sengine = qw(

indocenter.co.id		search
snap.com			keyword
altavista.com			q
hotbot.com			MT
search.msn.com			MT
infoseek.com			qt
goto.com			Keywords
looksmart.com			key
excite.com			search
go2net.com			general
metacrawler.com 		general
netfind.aol.com 		s
ink.yahoo.com			p
excitesearch.netscape.com	search
excite.co.uk			search
theglobe.com			keywords
google.com			q
mamma.com			query
dogpile.com			q
icqit.com			MT
profusion.com			queryterm

 );
  for $s (keys %sengine) {
#      if (index($s,$referer)) { # preliminary filtering, performance consideration
# hehe, setelah di-tes ternyata ngga efek jauh
          if ( $referer=~m{(?://|.)$s.*(?:\?|&)$sengine{$s}=(.+?)(?:\?|&)}i ) {
              $keyword = $1;
              $keyword =~ tr/+/ /;
              $keyword =~ s/%(..)/pack('c',hex($1))/ge;
              $keywords{$keyword}++;
          }
#      }
# hehe
  }
}

print "REPORT $tanggal_awal s.d. $tanggal";
print $separator;

print "Host pengakses:\n\n";
for (reverse sort {$hosts{$a} <=> $hosts{$b}} keys %hosts) {print &column($_,$hosts{$_}), "\n"}
print $separator;

print "URL yang diakses:\n\n";
for (reverse sort {$urls{$a} <=> $urls{$b}} keys %urls) {print &column($_,$urls{$_}), "\n"}
print $separator;

print "Referer:\n\n";
for (reverse sort {$referers{$a} <=> $referers{$b}} keys %referers) {print &column($_,$referers{$_}), "\n"}
print $separator;

print "Browser:\n\n";
for (reverse sort {$uas{$a} <=> $uas{$b}} keys %uas) {print &column($_,$uas{$_}), "\n"}
print "\nStatistik:\n\n";
for (reverse sort {$tipe_browser{$a} <=> $tipe_browser{$b}} keys %tipe_browser)
  {print &column($_,"$tipe_browser{$_} (".sprintf("%0.1f",$tipe_browser{$_}/$hits*100)."%)" ), "\n"}
print $separator;

print "Method:\n\n";
for (reverse sort {$methods{$a} <=> $methods{$b}} keys %methods) {print &column($_,$methods{$_}), "\n"}
print $separator;

print "Status:\n\n";
for (sort keys %statuses) {print &column($_,"$statuses{$_} (".sprintf("%0.1f",$statuses{$_}/$hits*100)."%)" ), "\n"}
print $separator;

print "Keywords:\n\n";
for (reverse sort {$keywords{$a} <=> $keywords{$b}} keys %keywords) {print &column($_,$keywords{$_}), "\n"}
print $separator;

print "Total hits = $hits\n";
print "Total bytes transferred = $total_bytes\n";
print $separator;
print "Generated by ", $0, " on ",scalar(localtime), "\n";





# print in 2 columns (satu rata kiri, satu rata kanan)
sub column {
  my $a;
  $width=70;

  $_[0] . " " x (($a=$width-length($_[0])-length($_[1]))>1?$a:1) . $_[1];
}
