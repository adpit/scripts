#!/usr/bin/perl -w

use strict;
use Cwd;
use File::Slurp;
use Log::Log4perl qw(:easy);
use WWW::Mechanize;
use App::Options (
    option => {
        username => { type => 'string', required => 1, },
        password => { type => 'string', required => 1, },
        #delay => { type => 'int', required => 0, default => 4, },
        log_level => { type => 'string', required => 0, default => 'DEBUG' },
        days => { type => 'int', required => 0, default => 31 },
        begin_date => { type => 'string', required => 0 },
        end_date => { type => 'string', required => 0 },
    },
);

if ( $App::options{log_level} eq 'FATAL' ) {
    Log::Log4perl->easy_init($FATAL);
}
elsif ( $App::options{log_level} eq 'ERROR' ) {
    Log::Log4perl->easy_init($ERROR);
}
elsif ( $App::options{log_level} eq 'WARN' ) {
    Log::Log4perl->easy_init($WARN);
}
elsif ( $App::options{log_level} eq 'INFO' ) {
    Log::Log4perl->easy_init($INFO);
}
else { Log::Log4perl->easy_init($DEBUG) }

my $begin_date;
my $end_date;
my $days = $App::options{days}+0;
my ($y1, $m1, $d1);
my ($y2, $m2, $d2);
if ($days) {
    ($y1, $m1, $d1) = (localtime(time-$days*86400))[5,4,3]; $m1++; $y1 += 1900;
    ($y2, $m2, $d2) = (localtime(time-    0*86400))[5,4,3]; $m2++; $y2 += 1900;
} elsif ($App::options{begin_date} && $App::options{end_date}) {
    ($m1, $d1, $y1) = $App::options{begin_date} =~ m!(\d+)/(\d+)/(\d+)! or LOGDIE "Invalid begin_date";
    ($m2, $d2, $y2) = $App::options{end_date}   =~ m!(\d+)/(\d+)/(\d+)! or LOGDIE "Invalid end_date";
}

my $mech = new WWW::Mechanize;

DEBUG "Logging in as $App::options{username} ...";
$mech->get("https://www.paypal.com/");
$mech->submit_form(
    form_name => 'login_form',
    fields    => {
        login_email    => $App::options{username},
        login_password => $App::options{password},
    },
    button => 'submit.x',
);

#DEBUG "Getting account overview page ...";
#$mech->get("https://www.paypal.com/row/cgi-bin/webscr?cmd=_account&nav=0");

DEBUG "Getting download history page ...";
$mech->get("https://history.paypal.com/row/cgi-bin/webscr?cmd=_history-download");

$mech->content =~ m!cmd=_logout">Log Out</a>! or do {
    DEBUG "Full output of response: ".$mech->content;
    LOGDIE "Can't login";
};

$mech->submit_form(
                   form_name   => 'form1',
                   fields      => {
                                       type => "latest_completed_date_range",
                                       from_a => $m1,
                                       from_b => $d1,
                                       from_c => $y1,
                                       to_a => $m2,
                                       to_b => $d2,
                                       to_c => $y2,
                                       custom_file_type => "comma_completed",
                                   },
                       button => 'submit.x',
               );
my $i = 0;
my $filename;
while (1) {
    $filename = sprintf "%s.%04d%02d%02d-%04d%02d%02d%s.csv", "paypal", $y1, $m1, $d1, $y2, $m2, $d2, ($i ? ".$i" : "");
    last unless -f $filename;
    $i++;
}
write_file($filename, $mech->content);
